primeiro commit(criando repositório)

//se não estiver logado

git config --list
git config --global user.name "Nelio Alves"
git config --global user.email "acenelio@gmail.com"

//se não estiver logado

git init
git remote add origin https://github.com/
git pull origin master
git status 
git add . 
git commit -m "Projeto criado" 
git push -u origin master



ou (atual)

echo "# atividades-diversas-atualizadas-volume2" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/Leozin89python/atividades-diversas-atualizadas-volume2.git
git push -u origin main




(caso não aceite o comando:
git branch -M main
)
git checkout -b main




a partir do segundo commit(atualizando repositório)

git status
git add .
git commit -m "projeto alterado"
git push  



ou (atual)
 

git add .
git commit -m "projeto alterado"
git branch -M "main"
git push origin main




commits anteriores(verificação)

git log --oneline




remover para reincerir repositório:


git remote -v 
git remote remove origin 

git remote add origin git@github.com:user/repo.git  



novos comandos:

git push -A
git reset --hard [main] caso branch main
git reset --hard [master] caso branch master
git remote show origin
git push -f origin main


heroku:

heroku login
heroku git:remote -a <nome-do-app>
git remote -v
git subtree push --prefix backend heroku main

comando para configuração de linguagem:

heroku buildpacks:set heroku/java

obs* 
para dar certo o nivel de commit do heroku deve ser o mesmo nivel° de commit do github.

(mesmo repositório)°

ex:

repositorio de commit git:
d:users\sev\dev-workspace\dev-app

repositorio de commit heroku:
d:users\sev\dev-workspace\dev-app